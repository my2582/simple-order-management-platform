#!/usr/bin/env python3
"""Test contract creation with original approach without needing IBKR connection."""

import sys
import logging
from datetime import datetime

# Add src to path
sys.path.insert(0, '/home/user/webapp/src')

from simple_order_management_platform.providers.ib import IBProvider
from simple_order_management_platform.models.universe import universe_manager

# Setup logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_contract_creation():
    """Test contract creation without IBKR connection."""
    
    print(f"🧪 Testing Contract Creation with Original Approach - {datetime.now()}")
    print("=" * 70)
    
    # Get mixed symbols for testing (futures and stocks)
    all_symbols = list(universe_manager.get_all_ib_symbols())
    test_symbols = []
    futures_count = 0
    stocks_count = 0
    
    for symbol in all_symbols:
        instrument = universe_manager.get_instrument(symbol)
        if instrument:
            if instrument.ib_security_type == 'FUT' and futures_count < 5:
                test_symbols.append(symbol)
                futures_count += 1
            elif instrument.ib_security_type == 'STK' and stocks_count < 5:
                test_symbols.append(symbol)
                stocks_count += 1
            
            if len(test_symbols) >= 10:  # Test with 10 mixed symbols
                break
    
    print(f"📊 Testing contract creation for {len(test_symbols)} symbols ({futures_count} futures, {stocks_count} stocks):")
    
    # Create a dummy IBProvider instance for testing (no connection needed)
    class DummyConnector:
        def __init__(self):
            self.ib = None
    
    provider = IBProvider(DummyConnector())  # We'll only test the contract creation method
    
    success_count = 0
    failed_count = 0
    
    for symbol in test_symbols:
        try:
            universe_instrument = universe_manager.get_instrument(symbol)
            print(f"\\n🔧 Testing {symbol}:")
            print(f"   Name: {universe_instrument.instrument_name}")
            print(f"   Asset Class: {universe_instrument.asset_class}")
            print(f"   Security Type: {universe_instrument.ib_security_type}")
            print(f"   Exchange: {universe_instrument.exchange}")
            print(f"   Currency: {universe_instrument.currency}")
            
            # Test the original approach: create instrument model
            instrument_model = provider._create_instrument_model_from_universe(universe_instrument)
            
            if instrument_model:
                print(f"   ✅ Created instrument model: {type(instrument_model).__name__}")
                
                # Test contract creation using original approach
                contract = instrument_model.to_ib_contract()
                
                if contract:
                    print(f"   ✅ Created contract: {type(contract).__name__}")
                    print(f"      Symbol: {contract.symbol}")
                    print(f"      Exchange: {contract.exchange}")
                    print(f"      Currency: {contract.currency}")
                    print(f"      SecType: {getattr(contract, 'secType', 'ContFuture')}")
                    success_count += 1
                else:
                    print(f"   ❌ Failed to create contract")
                    failed_count += 1
            else:
                print(f"   ❌ Failed to create instrument model")
                failed_count += 1
                
        except Exception as e:
            print(f"   ❌ Error: {e}")
            failed_count += 1
    
    print(f"\\n📊 Contract Creation Results:")
    print(f"✅ Success: {success_count}/{len(test_symbols)} ({success_count/len(test_symbols)*100:.1f}%)")
    print(f"❌ Failed: {failed_count}/{len(test_symbols)} ({failed_count/len(test_symbols)*100:.1f}%)")
    
    # Now test the old broken approach for comparison
    print(f"\\n🔄 Comparing with old broken approach:")
    old_success_count = 0
    
    for symbol in test_symbols[:3]:  # Test just 3 for comparison
        try:
            universe_instrument = universe_manager.get_instrument(symbol)
            old_contract = provider._create_contract_from_universe(universe_instrument)
            
            if old_contract:
                print(f"   Old approach for {symbol}: {type(old_contract).__name__} - {old_contract}")
                old_success_count += 1
            else:
                print(f"   Old approach for {symbol}: Failed")
        except Exception as e:
            print(f"   Old approach for {symbol}: Error - {e}")
    
    print(f"\\n🎯 Analysis:")
    print(f"New Original Approach: {success_count}/{len(test_symbols)} success")
    print(f"Old Broken Approach (sample): {old_success_count}/3 success")
    
    return success_count > 0

if __name__ == "__main__":
    success = test_contract_creation()
    sys.exit(0 if success else 1)